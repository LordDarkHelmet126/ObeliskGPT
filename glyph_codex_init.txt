# MUXEDIT Metadata: ScriptID=7d8e9f0a-1b2c-3d4e-5f6a-7b8c9d0e1f2a, Version=1.0, Author=LordDarkHelmet, Created=2025-05-13, Purpose=GlyphCodexInitialization, Dependencies=glyph_mappings.sqlite, ValidationStatus=Failed
# Description: Initializes the Obelisküúí Glyph Codex (512 glyphs) for GlyphEngine Suite
# Encoding: UTF-8 BOM üú∞
# Codex: file_id=7d8e9f0a-1b2c-3d4e-5f6a-7b8c9d0e1f2a, schema=glyph_codex_v1, lines=60, words=250, glyphs=15, dependencies=glyph_mappings.sqlite, validation_status=failed

param (
    [string]$CodexPath = "F:\OBELISK-OS\glyph_mappings.sqlite",
    [int]$GlyphCount = 512
)

function Initialize-GlyphCodex {
    param (
        [string]$Path,
        [int]$Count
    )
    try {
        if (-not (Test-Path $Path)) {
            throw "Codex database not found: $Path"
        }
        $connection = New-SqliteConnection -Path $Path
        $glyphs = Invoke-SqliteQuery -Connection $connection -Query "SELECT * FROM glyphs WHERE active = 1 LIMIT $Count"
        if ($glyphs.Count -ne $Count) {
            throw "Expected $Count glyphs, found $($glyphs.Count)"
        }
        Write-Log -LogFile "F:\OBELISK-OS\Final Consolidated Folder\Logs\codex_init_diagnostic.log" -Message "Codex initialized: $Count glyphs" -Glyph "üúÅ"
        return $glyphs
    }
    catch {
        $errorMsg = $_.Exception.Message
        Write-Log -LogFile "F:\OBELISK-OS\Final Consolidated Folder\Logs\glyph_error_20250513.log" -Message "Codex initialization failed: $errorMsg" -Glyph "üúí" -Error $true
        throw $errorMsg
    }
    finally {
        if ($connection) { $connection.Close() }
    }
}

# Initialize codex
Initialize-GlyphCodex -Path $CodexPath -Count $GlyphCount

# Validate initialization
Invoke-Validation -Script "Validate-GlyphCodex.ps1" -Parameters @{ CodexPath = $CodexPath }

# ---CODEX---